// <auto-generated />
using A2_updated_p1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace A2_updated_p1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("A2_updated_p1.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "coding",
                            Name = "Coding"
                        },
                        new
                        {
                            CategoryId = "history",
                            Name = "History"
                        },
                        new
                        {
                            CategoryId = "gadgets",
                            Name = "Gadgets"
                        },
                        new
                        {
                            CategoryId = "science",
                            Name = "Science"
                        },
                        new
                        {
                            CategoryId = "travel",
                            Name = "Travel"
                        },
                        new
                        {
                            CategoryId = "movies",
                            Name = "Movies"
                        },
                        new
                        {
                            CategoryId = "health",
                            Name = "Health"
                        },
                        new
                        {
                            CategoryId = "sports",
                            Name = "Sports"
                        },
                        new
                        {
                            CategoryId = "music",
                            Name = "Music"
                        },
                        new
                        {
                            CategoryId = "food",
                            Name = "Food"
                        });
                });

            modelBuilder.Entity("A2_updated_p1.Models.FAQ", b =>
                {
                    b.Property<int>("FAQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FAQId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FAQId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TopicId");

                    b.ToTable("FAQs");

                    b.HasData(
                        new
                        {
                            FAQId = 1,
                            Answer = "Java is a programming language...",
                            CategoryId = "coding",
                            Question = "What is Java?",
                            TopicId = "java"
                        },
                        new
                        {
                            FAQId = 2,
                            Answer = "Python is a versatile programming language...",
                            CategoryId = "coding",
                            Question = "Tell me about Python.",
                            TopicId = "python"
                        },
                        new
                        {
                            FAQId = 3,
                            Answer = "Historical events are significant occurrences...",
                            CategoryId = "history",
                            Question = "What are historical events?",
                            TopicId = "history-events"
                        },
                        new
                        {
                            FAQId = 4,
                            Answer = "Smartphones are handheld devices that combine...",
                            CategoryId = "gadgets",
                            Question = "How do smartphones work?",
                            TopicId = "smartphones"
                        },
                        new
                        {
                            FAQId = 5,
                            Answer = "Space exploration involves the discovery and exploration...",
                            CategoryId = "science",
                            Question = "What is space exploration?",
                            TopicId = "space"
                        },
                        new
                        {
                            FAQId = 6,
                            Answer = "Europe offers a variety of beautiful destinations including...",
                            CategoryId = "travel",
                            Question = "Best places to visit in Europe?",
                            TopicId = "europe-travel"
                        },
                        new
                        {
                            FAQId = 7,
                            Answer = "Action movies are known for their thrilling...",
                            CategoryId = "movies",
                            Question = "Must-watch action movies?",
                            TopicId = "action-movies"
                        },
                        new
                        {
                            FAQId = 8,
                            Answer = "Maintaining mental health involves practices like...",
                            CategoryId = "health",
                            Question = "How to maintain mental health?",
                            TopicId = "mental-health"
                        },
                        new
                        {
                            FAQId = 9,
                            Answer = "Football is a popular sport played between two teams...",
                            CategoryId = "sports",
                            Question = "Football rules and regulations.",
                            TopicId = "football"
                        },
                        new
                        {
                            FAQId = 10,
                            Answer = "Rock music has been shaped by iconic bands like...",
                            CategoryId = "music",
                            Question = "Influential rock music bands.",
                            TopicId = "rock-music"
                        });
                });

            modelBuilder.Entity("A2_updated_p1.Models.Topic", b =>
                {
                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            TopicId = "java",
                            CategoryId = "coding",
                            Name = "Java"
                        },
                        new
                        {
                            TopicId = "python",
                            CategoryId = "coding",
                            Name = "Python"
                        },
                        new
                        {
                            TopicId = "history-events",
                            CategoryId = "history",
                            Name = "Historical Events"
                        },
                        new
                        {
                            TopicId = "smartphones",
                            CategoryId = "gadgets",
                            Name = "Smartphones"
                        },
                        new
                        {
                            TopicId = "space",
                            CategoryId = "science",
                            Name = "Space Exploration"
                        },
                        new
                        {
                            TopicId = "europe-travel",
                            CategoryId = "travel",
                            Name = "Europe Travel"
                        },
                        new
                        {
                            TopicId = "action-movies",
                            CategoryId = "movies",
                            Name = "Action Movies"
                        },
                        new
                        {
                            TopicId = "mental-health",
                            CategoryId = "health",
                            Name = "Mental Health"
                        },
                        new
                        {
                            TopicId = "football",
                            CategoryId = "sports",
                            Name = "Football"
                        },
                        new
                        {
                            TopicId = "rock-music",
                            CategoryId = "music",
                            Name = "Rock Music"
                        });
                });

            modelBuilder.Entity("A2_updated_p1.Models.FAQ", b =>
                {
                    b.HasOne("A2_updated_p1.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("A2_updated_p1.Models.Topic", "Topic")
                        .WithMany("FAQs")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("A2_updated_p1.Models.Topic", b =>
                {
                    b.HasOne("A2_updated_p1.Models.Category", "Category")
                        .WithMany("Topics")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("A2_updated_p1.Models.Category", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("A2_updated_p1.Models.Topic", b =>
                {
                    b.Navigation("FAQs");
                });
#pragma warning restore 612, 618
        }
    }
}
